[{"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\index.js":"1","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\reportWebVitals.js":"2","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\App.js":"3","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\hooks\\auth.hook.js":"4","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\routes.js":"5","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\context\\AuthContext.js":"6","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\components\\Navbar.js":"7","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\hooks\\http.hook.js":"8","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\pages\\AuthPage.js":"9","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\hooks\\message.hook.js":"10","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\pages\\MainPage.js":"11","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\components\\Loader.js":"12","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\components\\Graph.js":"13","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\components\\ResultsList.js":"14","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\hooks\\mouse.hook.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":3457,"mtime":1608587433756,"results":"19","hashOfConfig":"17"},{"size":1052,"mtime":1605283440651,"results":"20","hashOfConfig":"17"},{"size":652,"mtime":1607094853266,"results":"21","hashOfConfig":"17"},{"size":228,"mtime":1605227849637,"results":"22","hashOfConfig":"17"},{"size":978,"mtime":1608586413876,"results":"23","hashOfConfig":"17"},{"size":1074,"mtime":1608587797966,"results":"24","hashOfConfig":"17"},{"size":4147,"mtime":1608589090440,"results":"25","hashOfConfig":"17"},{"size":209,"mtime":1603233026358,"results":"26","hashOfConfig":"17"},{"size":20251,"mtime":1608565163413,"results":"27","hashOfConfig":"17"},{"size":680,"mtime":1603660069846,"results":"28","hashOfConfig":"17"},{"size":6721,"mtime":1608589585651,"results":"29","hashOfConfig":"17"},{"size":979,"mtime":1607125368837,"results":"30","hashOfConfig":"17"},{"size":554,"mtime":1607118373075,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1f6d1vw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\index.js",[],["68","69"],"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\reportWebVitals.js",[],"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\App.js",["70","71"],"// import React from \"react\";\n// // import logo from './logo.svg'\n// import './App.css'\n// import 'materialize-css'\n//\n// function App() {\n//\n//\n//\n//   return (\n//     <div className=\"App\">\n//       <p>qwer</p>\n//         <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Submit\n//             <i className=\"material-icons right\">send</i>\n//         </button>\n//     </div>\n//   )\n// }\n//\n// export default App\nimport React from 'react'\nimport 'materialize-css'\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\nimport {useRoutes} from \"./routes\"\nimport {useAuth} from \"./hooks/auth.hook\"\nimport {AuthContext} from \"./context/AuthContext\"\nimport {Navbar} from \"./components/Navbar\"\nimport {bindActionCreators, createStore} from 'redux'\nimport {connect, Provider} from 'react-redux'\nimport {MainPage} from \"./pages/MainPage\";\nimport {AuthPage} from \"./pages/AuthPage\";\n\nconst initialState = {\n    name: ''\n}\n\nconst rootReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case 'ACTION_CHANGE_NAME':\n            return {...state, name: action.payload}\n    }\n\n    return state\n}\n\nconst store = createStore(rootReducer)\n\nconsole.log(store.getState())\n\nconst putStateToProps = (state) => {\n    console.log(state)\n    return {\n        name: state.name\n    }\n}\n\nconst putActionToProps = (dispatch) => {\n    return {\n        changeName: bindActionCreators(changeName, dispatch)\n    }\n}\n\nconst WrappedNavbar = connect(putStateToProps)(Navbar)\nconst WrappedAuthPage = connect(putStateToProps, putActionToProps)(AuthPage)\n\nconst changeName = (newName) => {\n    return {\n        type: 'ACTION_CHANGE_NAME',\n        payload: newName\n    }\n}\n\n\nfunction App() {\n    const {token, login, logout, userId, ready} = useAuth()\n    console.log(token, login, logout, userId, ready)\n    const isAuthenticated = !!token\n    const routes = useRoutes(isAuthenticated)\n    return (\n        <AuthContext.Provider value={{\n            token, login, logout, userId, isAuthenticated\n        }}>\n            <Provider store={store}>\n            <Router>\n                {/*{isAuthenticated && <WrappedNavbar/>}*/}\n\n                {/*<div className=\"container\">*/}\n                {/*    {routes}*/}\n                {/*</div>*/}\n\n                {isAuthenticated ? (\n                    <>\n                        <WrappedNavbar/>\n                        <div className=\"container\">\n                            <Switch>\n                                <Route path=\"/\" exact>\n                                    <MainPage />\n                                </Route>\n                                <Redirect to=\"/\" />\n                            </Switch>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className=\"container\">\n                            <Switch>\n                                <Route path=\"/\" exact>\n                                    <WrappedAuthPage />\n                                </Route>\n                                <Redirect to=\"/\" />\n                            </Switch>\n                        </div>\n                    </>\n                )}\n            </Router>\n            </Provider>\n        </AuthContext.Provider>\n    )\n}\n\n// function App() {\n//     return (\n//         <Provider store={store}>\n//             <main/>\n//         </Provider>\n//     )\n// }\n\nexport default App\n\n","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\hooks\\auth.hook.js",["72"],"import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n    const [name, setName] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id, name) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n        setName(name)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken, name: name\r\n        }))\r\n    }, [])\r\n\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        setName(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId, data.name)\r\n        }\r\n        setReady(true)\r\n    }, [login])\r\n\r\n\r\n    return { login, logout, token, userId, ready }\r\n}\r\n","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\routes.js",[],"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\context\\AuthContext.js",[],"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\components\\Navbar.js",["73","74","75","76","77"],"import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\n\r\n\r\nexport const Navbar = (props) => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"navbar-fixed\">\r\n            <nav>\r\n                <div className=\"nav-wrapper indigo\" style={{ padding: '0 2rem' }}>\r\n                    <span className=\"brand-logo\">ЛР4 - id#{props.name}</span>\r\n                    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                        <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\hooks\\http.hook.js",[],"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\pages\\AuthPage.js",["78"],"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\hooks\\message.hook.js",[],"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\pages\\MainPage.js",["79","80","81","82","83","84","85"],"import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {Graph} from \"../components/Graph\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {ResultsList} from \"../components/ResultsList\";\r\nimport useMousePosition from \"../hooks/mouse.hook\";\r\nimport ReactCursorPosition from \"react-cursor-position\";\r\n\r\nexport const MainPage = () => {\r\n// export class MainPage extends React.Component{\r\n\r\n    const pointsList = [\r\n        {\r\n            x: 1,\r\n            y: 1,\r\n            r: 2,\r\n            result: false\r\n        },\r\n        {\r\n            x: 0,\r\n            y: 0,\r\n            r: 1,\r\n            result: true\r\n        },\r\n        {\r\n            x: -2,\r\n            y: 1.2,\r\n            r: 3,\r\n            result: false\r\n        },\r\n        {\r\n            x: -1.12,\r\n            y: -1.6,\r\n            r: 2,\r\n            result: true\r\n        },\r\n        {\r\n            x: 0.35,\r\n            y: -0.9,\r\n            r: 2,\r\n            result: false\r\n        },\r\n        {\r\n            x: -2,\r\n            y: 1,\r\n            r: 3,\r\n            result: false\r\n        }\r\n    ]\r\n\r\n\r\n    const [x, setX] = useState(0)\r\n    const [y, setY] = useState('')\r\n    const [r, setR] = useState(2)\r\n    const [points, setPoints] = useState(pointsList)\r\n    const {loading, request} = useHttp()\r\n    const {token} = useContext(AuthContext)\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const { mouseX, mouseY } = useMousePosition()\r\n\r\n    // setPoints(pointsList)\r\n\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n\r\n\r\n    const submitHandler = () => {\r\n        const numY = Number(y)\r\n        if (numY !== undefined && numY > -3 && numY < 3 && y !== '') {\r\n            message('x = ' + x + ', y = ' + y + ', r = ' + r)\r\n\r\n            // здесь будет ajax запрос на добавление точки\r\n\r\n        } else {\r\n            message('Некорректный Y')\r\n            setY('')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const clearHandler = () => {\r\n        message('ты пидор')\r\n\r\n        // здесь будет ajax запрос на удаление всех точек\r\n\r\n    }\r\n\r\n    const changeR = (r) => {\r\n        setR(r)\r\n\r\n    }\r\n\r\n\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    // const hasMovedCursor = typeof mouseX === \"number\" && typeof mouseY === \"number\";\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6 xl6\">\r\n                    <div className=\"card-panel pink lighten-1 hoverable\">\r\n                        {/*<div className=\"graph-box\">*/}\r\n                        <ReactCursorPosition>\r\n                            <Graph points={points} r={r}/>\r\n                        </ReactCursorPosition>\r\n                        {/*</div>*/}\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col s12 m6 xl6\">\r\n                    {/*<div className=\"card-panel teal\">*/}\r\n\r\n                    {/*</div>*/}\r\n                    <div className=\"card blue hoverable\">\r\n                        <div className=\"card-content white-text\">\r\n                            <span className=\"card-title\">Параметры точки</span>\r\n                            <div>\r\n\r\n                                <label htmlFor=\"choose-x\" className=\"white-text\">Выберите X</label>\r\n                                <div className=\"input-field form-field\" id=\"choose-x\">\r\n\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={x === -2} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setX(-2)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">-2</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={x === -1.5} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setX(-1.5)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">-1.5</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={x === -1} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setX(-1)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">-1</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={x === -0.5} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setX(-0.5)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">-0.5</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={x === 0} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setX(0)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">0</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={x === 0.5} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setX(0.5)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">0.5</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={x === 1} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setX(1)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">1</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={x === 1.5} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setX(1.5)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">1.5</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={x === 2} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setX(2)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">2</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                                <div className=\"input-field\">\r\n                                    <input placeholder=\"(-3;3)\" id=\"yField\" type=\"text\" name=\"yField\" maxlength=\"17\" value={y}\r\n                                           onChange={e => {\r\n                                               setY(e.target.value.trim())\r\n                                           }}/>\r\n                                    <label htmlFor=\"yField\" className=\"white-text\">Введите Y</label>\r\n                                </div>\r\n\r\n                                <label htmlFor=\"choose-r\" className=\"white-text\">Выберите R</label>\r\n                                <div className=\"input-field form-field\" id=\"choose-r\">\r\n\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={r === -2} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        changeR(-2)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">-2</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={r === -1.5} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        changeR(-1.5)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">-1.5</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={r === -1} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        changeR(-1)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">-1</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={r === -0.5} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setR(-0.5)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">-0.5</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={r === 0} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setR(0)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">0</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={r === 0.5} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setR(0.5)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">0.5</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={r === 1} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setR(1)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">1</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={r === 1.5} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setR(1.5)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">1.5</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col s4\">\r\n                                            <p>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" className=\"filled-in checkbox-orange\" checked={r === 2} onChange={e => {\r\n                                                        // showHiddenOnly()\r\n                                                        setR(2)\r\n                                                    }}/>\r\n                                                    <span className=\"white-text\">2</span>\r\n                                                </label>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n                                {/*<div className=\"input-field\">*/}\r\n                                {/*    <input placeholder=\"Введите пароль\" id=\"pass\" type=\"password\" name=\"pass\" value={form.pass} onChange={changeHandler}/>*/}\r\n                                {/*    <label htmlFor=\"login\">Пароль</label>*/}\r\n                                {/*</div>*/}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n                            <button className=\"btn yellow darken-4 pulse\" onClick={submitHandler} disabled={loading} style={{marginRight: 10}}>Проверить</button>\r\n                            <button className=\"btn yellow darken-4\" onClick={clearHandler} disabled={loading}>Очистить</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col s12\">\r\n                    <div className=\"card-panel teal hoverable\">\r\n                        <ResultsList points={points}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\components\\Loader.js",[],"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\components\\Graph.js",["86","87","88","89","90","91","92","93"],"C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\components\\ResultsList.js",["94"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const ResultsList = ({ points }) => {\r\n    if (!points.length) {\r\n        return <p className=\"center\">Точек пока нет</p>\r\n    }\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>X</th>\r\n                <th>Y</th>\r\n                <th>R</th>\r\n                <th>Попадание</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            { points.map((point, index) => {\r\n                // console.log(category)\r\n                return (\r\n                    <tr key={point._id}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{point.x}</td>\r\n                        <td>{point.y}</td>\r\n                        <td>{point.r}</td>\r\n                        <td>{point.result ? '+' : '-'}</td>\r\n                    </tr>\r\n                )\r\n            }) }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n","C:\\ITMO\\3 semester\\Web Programming\\lab-4\\src\\hooks\\mouse.hook.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":39,"column":5,"nodeType":"101","messageId":"102","endLine":42,"endColumn":6},{"ruleId":"103","severity":1,"message":"104","line":79,"column":11,"nodeType":"105","messageId":"106","endLine":79,"endColumn":17},{"ruleId":"103","severity":1,"message":"107","line":9,"column":12,"nodeType":"105","messageId":"106","endLine":9,"endColumn":16},{"ruleId":"103","severity":1,"message":"108","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":27},{"ruleId":"103","severity":1,"message":"109","line":1,"column":41,"nodeType":"105","messageId":"106","endLine":1,"endColumn":50},{"ruleId":"103","severity":1,"message":"110","line":1,"column":52,"nodeType":"105","messageId":"106","endLine":1,"endColumn":60},{"ruleId":"103","severity":1,"message":"111","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"112","line":4,"column":9,"nodeType":"105","messageId":"106","endLine":4,"endColumn":16},{"ruleId":"103","severity":1,"message":"113","line":8,"column":11,"nodeType":"105","messageId":"106","endLine":8,"endColumn":19},{"ruleId":"103","severity":1,"message":"108","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":27},{"ruleId":"103","severity":1,"message":"114","line":57,"column":20,"nodeType":"105","messageId":"106","endLine":57,"endColumn":29},{"ruleId":"103","severity":1,"message":"115","line":58,"column":21,"nodeType":"105","messageId":"106","endLine":58,"endColumn":28},{"ruleId":"103","severity":1,"message":"116","line":59,"column":12,"nodeType":"105","messageId":"106","endLine":59,"endColumn":17},{"ruleId":"103","severity":1,"message":"117","line":60,"column":11,"nodeType":"105","messageId":"106","endLine":60,"endColumn":15},{"ruleId":"103","severity":1,"message":"118","line":62,"column":13,"nodeType":"105","messageId":"106","endLine":62,"endColumn":19},{"ruleId":"103","severity":1,"message":"119","line":62,"column":21,"nodeType":"105","messageId":"106","endLine":62,"endColumn":27},{"ruleId":"103","severity":1,"message":"120","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":24},{"ruleId":"103","severity":1,"message":"121","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":27},{"ruleId":"103","severity":1,"message":"122","line":16,"column":13,"nodeType":"105","messageId":"106","endLine":16,"endColumn":28},{"ruleId":"103","severity":1,"message":"123","line":17,"column":13,"nodeType":"105","messageId":"106","endLine":17,"endColumn":28},{"ruleId":"103","severity":1,"message":"124","line":20,"column":13,"nodeType":"105","messageId":"106","endLine":20,"endColumn":18},{"ruleId":"103","severity":1,"message":"125","line":21,"column":13,"nodeType":"105","messageId":"106","endLine":21,"endColumn":19},{"ruleId":"103","severity":1,"message":"126","line":27,"column":9,"nodeType":"105","messageId":"106","endLine":27,"endColumn":17},{"ruleId":"103","severity":1,"message":"127","line":28,"column":9,"nodeType":"105","messageId":"106","endLine":28,"endColumn":26},{"ruleId":"103","severity":1,"message":"128","line":2,"column":9,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'routes' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'NavLink' is defined but never used.","'useHttp' is defined but never used.","'dispatch' is assigned a value but never used.","'setPoints' is assigned a value but never used.","'request' is assigned a value but never used.","'token' is assigned a value but never used.","'auth' is assigned a value but never used.","'mouseX' is assigned a value but never used.","'mouseY' is assigned a value but never used.","'useMousePosition' is defined but never used.","'ReactCursorPosition' is defined but never used.","'isMouseDetected' is assigned a value but never used.","'isTouchDetected' is assigned a value but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.","'isActive' is assigned a value but never used.","'isPositionOutside' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]